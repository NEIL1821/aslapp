[{"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/index.js":"1","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/reportWebVitals.js":"2","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/App.js":"3","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Pages/Main.js":"4","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/FontAwesome.js":"5","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/Navigation.js":"6","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Pages/home.js":"7","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Pages/Profile.js":"8","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Pages/About.js":"9","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Pages/LearningPage.js":"10","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Pages/TutorialPage.js":"11","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/ModalDictionary.js":"12","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/GameCard.js":"13","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/Tutorial.js":"14","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/Logo.jsx":"15","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/abc-pics.js":"16","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/dictionary.jsx":"17","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/utils/api.js":"18","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/WebcamCapture.jsx":"19","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/FlippinCard.jsx":"20"},{"size":500,"mtime":1612654578485,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1612654578486,"results":"23","hashOfConfig":"22"},{"size":321,"mtime":1612655525962,"results":"24","hashOfConfig":"22"},{"size":1008,"mtime":1612655457302,"results":"25","hashOfConfig":"22"},{"size":357,"mtime":1612655370208,"results":"26","hashOfConfig":"22"},{"size":2279,"mtime":1612656135516,"results":"27","hashOfConfig":"22"},{"size":8116,"mtime":1612655457306,"results":"28","hashOfConfig":"22"},{"size":445,"mtime":1612655457303,"results":"29","hashOfConfig":"22"},{"size":809,"mtime":1612655457300,"results":"30","hashOfConfig":"22"},{"size":991,"mtime":1612655457301,"results":"31","hashOfConfig":"22"},{"size":159,"mtime":1612655457304,"results":"32","hashOfConfig":"22"},{"size":622,"mtime":1612655370212,"results":"33","hashOfConfig":"22"},{"size":2467,"mtime":1612655370210,"results":"34","hashOfConfig":"22"},{"size":968,"mtime":1612655370215,"results":"35","hashOfConfig":"22"},{"size":4885,"mtime":1612655370211,"results":"36","hashOfConfig":"22"},{"size":3169,"mtime":1612655370217,"results":"37","hashOfConfig":"22"},{"size":998,"mtime":1612655370218,"results":"38","hashOfConfig":"22"},{"size":229,"mtime":1612655457390,"results":"39","hashOfConfig":"22"},{"size":3832,"mtime":1612655370216,"results":"40","hashOfConfig":"22"},{"size":1505,"mtime":1612655370203,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vrd7ue",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/index.js",[],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/reportWebVitals.js",[],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/App.js",[],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Pages/Main.js",[],["86","87"],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/FontAwesome.js",[],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/Navigation.js",[],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Pages/home.js",[],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Pages/Profile.js",["88","89"],"import React, { useEffect , useState} from 'react';\nimport { Button } from 'react-bootstrap';\n\nexport function Profile(props) {\n\treturn (\n\t\t<>\n\t\t\t<h1>Profile Page</h1>\n\t\t\t<h2>Hello Stranger</h2>\n\t\t\tCongrats!! <br />\n\t\t\tYou've reached level 4! <br />\n\t\t\tWhen you reach level the final stage, you will be able to connect with our community!\n\t\t\t<Button style={{ backgroundColor: '#6800F4' }} href=\"/learningPage\">Keep Learning</Button>\n\t\t</>\n\t);\n}\n","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Pages/About.js",[],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Pages/LearningPage.js",[],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Pages/TutorialPage.js",[],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/ModalDictionary.js",[],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/GameCard.js",[],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/Tutorial.js",[],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/Logo.jsx",[],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/abc-pics.js",[],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/dictionary.jsx",["90"],"import { useState } from 'react';\nimport { Button, Card, Container, Row } from 'react-bootstrap';\nimport alphabet from './abc-pics';\nimport FlippingCard from './FlippinCard';\nimport { MDBBtn } from 'mdbreact';\n\nexport const Dictionary = () => {\n\tconst [flipAll, setFlipAll] = useState(false);\n\treturn (\n\t\t<Container>\n\t\t\t <Button style={{ backgroundColor: '#6800F4' }} onClick={() => setFlipAll(!flipAll)}>Reveal all</Button>\n\t\t\t{alphabet && (\n\t\t\t\t<Row\n\t\t\t\t\tstyle={{ textAlign: 'center', justifyContent: 'center' }}\n\t\t\t\t\tsm={5}\n\t\t\t\t\tlg={4}\n\t\t\t\t\t>\n\t\t\t\t\t{alphabet.map(letter => (\n\t\t\t\t\t\t<FlippingCard otherSide={letter.id} key={letter.id} flip={flipAll}>\n\t\t\t\t\t\t\t<Card className='text-center shadow-lg bg-white rounded'>\n\t\t\t\t\t\t\t\t<Card.Img\n\t\t\t\t\t\t\t\t\theight='180'\n\t\t\t\t\t\t\t\t\tvariant='top'\n\t\t\t\t\t\t\t\t\tsrc={letter.src}\n\t\t\t\t\t\t\t\t\ttitle={letter.title}\n\t\t\t\t\t\t\t\t\talt={letter.alt}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Card.Body>Flip Card</Card.Body>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</FlippingCard>\n\t\t\t\t\t))}\n\t\t\t\t</Row>\n\t\t\t)}\n\t\t</Container>\n\t);\n};\n","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/utils/api.js",[],"/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/WebcamCapture.jsx",["91","92","93","94"],"import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport Webcam from \"react-webcam\";\n\nconst WebcamCapture = ({\n  photoProcessor,\n  timerSeconds = 4,\n  multiple = false,\n  size = 350,\n}) => {\n  const [deviceId, setDeviceId] = React.useState({});\n  const [cameraLoader, setCameraLoader] = React.useState(true);\n  const [devices, setDevices] = React.useState([]);\n  const [timeLeft, setTimeLeft] = React.useState(timerSeconds);\n  const [pictureTaken, setPictureTaken] = React.useState();\n\n  const webcamRef = React.useRef(null);\n\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setPictureTaken(imageSrc);\n    photoProcessor(imageSrc);\n  }, [webcamRef, photoProcessor]);\n\n  const captureMany = (many = 5) => {\n    let count = 1;\n    const interval = setInterval(() => {\n      capture();\n      count++;\n      if (count > many) {\n        clearInterval(interval);\n      }\n    }, 200);\n  };\n\n  const handleDevices = React.useCallback(\n    (mediaDevices) =>\n      setDevices(mediaDevices.filter(({ kind }) => kind === \"videoinput\")),\n    [setDevices]\n  );\n\n  React.useEffect(() => {\n    navigator.mediaDevices.enumerateDevices().then(handleDevices);\n  }, [handleDevices]);\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeLeft(timeLeft - 1);\n      if (timeLeft === 0) {\n        if (multiple) {\n          captureMany();\n        } else {\n          capture();\n        }\n      }\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [capture, timeLeft]);\n\n  return (\n    <>\n      <div\n        style={{\n          position: \"relative\",\n          width: `${size}px`,\n          height: `${size}px`,\n          borderRadius: \"100%\",\n          overflow: \"hidden\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          backgroundColor: \"#dadedf\",\n        }}\n      >\n        <Webcam\n          style={{ height: \"100%\", margin: \"0 auto\" }}\n          ref={webcamRef}\n          audio={false}\n          videoConstraints={{ deviceId }}\n          onUserMedia={() => setCameraLoader(false)}\n          screenshotFormat=\"image/jpeg\"\n        />\n        <div\n          style={{\n            position: \"absolute\",\n            height: \"100%\",\n            width: \"100%\",\n            top: \"0\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            boxShadow:\n              timeLeft < 0\n                ? \"inset 0px 0px 20px 10px rgba(255,255,255,0.6)\"\n                : \"\",\n          }}\n        >\n          {cameraLoader && (\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n          )}\n          {!cameraLoader && timeLeft > 0 && (\n            <h1\n              style={{\n                fontSize: \"7rem\",\n                color: \"white\",\n                \"WebkitTextStroke\": \"2px black\",\n              }}\n            >\n              {timeLeft}\n            </h1>\n          )}\n          {!cameraLoader && timeLeft <= 0 && <img src={pictureTaken} />}\n          {!cameraLoader && timeLeft < 0 && (\n            <div\n              style={{\n                height: \"101%\",\n                width: \"101%\",\n                boxShadow: \"inset 0px 0px 20px 10px rgba(255,255,255,0.6)\",\n                position: \"absolute\",\n                borderRadius: \"100%\",\n              }}\n            ></div>\n          )}\n        </div>\n      </div>\n\n      {/* <div>\n          {devices.map((device, key) => (\n            <button\n              key={device.deviceId}\n              onClick={() => setDeviceId(device.deviceId)}\n            >\n              {device.label || `Device ${key + 1}`}\n            </button>\n          ))}\n      </div> */}\n    </>\n  );\n};\n\nexport default WebcamCapture;\n","/Users/neilmayers/Desktop/HACKATHONAPP/ASL_APP/asl-app/src/Components/FlippinCard.jsx",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"103","line":1,"column":29,"nodeType":"101","messageId":"102","endLine":1,"endColumn":37},{"ruleId":"99","severity":1,"message":"104","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":16},{"ruleId":"99","severity":1,"message":"105","line":11,"column":20,"nodeType":"101","messageId":"102","endLine":11,"endColumn":31},{"ruleId":"99","severity":1,"message":"106","line":13,"column":10,"nodeType":"101","messageId":"102","endLine":13,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":58,"column":6,"nodeType":"109","endLine":58,"endColumn":25,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":114,"column":46,"nodeType":"113","endLine":114,"endColumn":72},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'MDBBtn' is defined but never used.","'setDeviceId' is assigned a value but never used.","'devices' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'captureMany' and 'multiple'. Either include them or remove the dependency array.","ArrayExpression",["116"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},"Update the dependencies array to be: [capture, captureMany, multiple, timeLeft]",{"range":"119","text":"120"},[1527,1546],"[capture, captureMany, multiple, timeLeft]"]